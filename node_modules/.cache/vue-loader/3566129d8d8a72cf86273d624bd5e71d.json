{"remainingRequest":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Programming\\Bot Dev\\front_end\\src\\views\\pages\\login\\LoginJWT.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Programming\\Bot Dev\\front_end\\src\\views\\pages\\login\\LoginJWT.vue","mtime":1582083320944},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      checkbox_remember_me: false\n    };\n  },\n  computed: {\n    validateForm() {\n      return !this.errors.any() && this.email != \"\" && this.password != \"\";\n    }\n  },\n  methods: {\n    checkLogin() {\n      // If user is already logged in notify\n      if (this.$store.getters.AppActiveUser.isLoggedIn) {\n        // Close animation if passed as payload\n        // this.$vs.loading.close()\n\n        this.$vs.notify({\n          title: \"Login Attempt\",\n          text: \"You are already logged in!\",\n          iconPack: \"feather\",\n          icon: \"icon-alert-circle\",\n          color: \"warning\"\n        });\n\n        return false;\n      }\n      return true;\n    },\n    loginJWT() {\n      // if (!this.checkLogin()) return; Uncomment This in production\n\n      // Loading\n      this.$vs.loading();\n\n      const payload = {\n        checkbox_remember_me: this.checkbox_remember_me,\n        userDetails: {\n          username: this.username,\n          password: this.password\n        }\n      };\n\n      this.$store\n        .dispatch(\"auth/loginJWT\", payload)\n        .then(() => {\n          this.$vs.loading.close();\n        })\n        .catch(error => {\n          console.log(error);\n          this.$vs.loading.close();\n          this.$vs.notify({\n            title: \"Error\",\n            text: error.message,\n            iconPack: \"feather\",\n            position: \"top-center\",\n            icon: \"icon-alert-circle\",\n            color: \"danger\"\n          });\n        });\n    },\n    registerUser() {\n      if (!this.checkLogin()) return;\n      this.$router.push(\"/pages/register\").catch(() => {});\n    }\n  }\n};\n",{"version":3,"sources":["LoginJWT.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LoginJWT.vue","sourceRoot":"src/views/pages/login","sourcesContent":["<template>\n  <div>\n    <vs-input\n      v-validate=\"'required|min:3'\"\n      data-vv-validate-on=\"blur\"\n      name=\"username\"\n      icon-no-border\n      icon=\"icon icon-user\"\n      icon-pack=\"feather\"\n      label-placeholder=\"Username\"\n      v-model=\"username\"\n      class=\"w-full\"\n    />\n    <span class=\"text-danger text-sm\">{{ errors.first(\"username\") }}</span>\n\n    <vs-input\n      data-vv-validate-on=\"blur\"\n      v-validate=\"'required|min:6|max:10'\"\n      type=\"password\"\n      name=\"password\"\n      icon-no-border\n      icon=\"icon icon-lock\"\n      icon-pack=\"feather\"\n      label-placeholder=\"Password\"\n      v-model=\"password\"\n      class=\"w-full mt-6\"\n    />\n    <span class=\"text-danger text-sm\">{{ errors.first(\"password\") }}</span>\n\n    <!-- <div class=\"flex flex-wrap justify-between my-5\" style=\"display:none\">\n      <vs-checkbox v-model=\"checkbox_remember_me\" class=\"mb-3\"\n        >Remember Me</vs-checkbox\n      >\n    </div> -->\n    <div class=\"flex flex-wrap justify-between mb-3 mt-5\">\n      <vs-button :disabled=\"!validateForm\" @click=\"loginJWT\">Login</vs-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      checkbox_remember_me: false\n    };\n  },\n  computed: {\n    validateForm() {\n      return !this.errors.any() && this.email != \"\" && this.password != \"\";\n    }\n  },\n  methods: {\n    checkLogin() {\n      // If user is already logged in notify\n      if (this.$store.getters.AppActiveUser.isLoggedIn) {\n        // Close animation if passed as payload\n        // this.$vs.loading.close()\n\n        this.$vs.notify({\n          title: \"Login Attempt\",\n          text: \"You are already logged in!\",\n          iconPack: \"feather\",\n          icon: \"icon-alert-circle\",\n          color: \"warning\"\n        });\n\n        return false;\n      }\n      return true;\n    },\n    loginJWT() {\n      // if (!this.checkLogin()) return; Uncomment This in production\n\n      // Loading\n      this.$vs.loading();\n\n      const payload = {\n        checkbox_remember_me: this.checkbox_remember_me,\n        userDetails: {\n          username: this.username,\n          password: this.password\n        }\n      };\n\n      this.$store\n        .dispatch(\"auth/loginJWT\", payload)\n        .then(() => {\n          this.$vs.loading.close();\n        })\n        .catch(error => {\n          console.log(error);\n          this.$vs.loading.close();\n          this.$vs.notify({\n            title: \"Error\",\n            text: error.message,\n            iconPack: \"feather\",\n            position: \"top-center\",\n            icon: \"icon-alert-circle\",\n            color: \"danger\"\n          });\n        });\n    },\n    registerUser() {\n      if (!this.checkLogin()) return;\n      this.$router.push(\"/pages/register\").catch(() => {});\n    }\n  }\n};\n</script>\n"]}]}
{"remainingRequest":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Programming\\Bot Dev\\front_end\\src\\views\\pages\\register\\RegisterJWT.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Programming\\Bot Dev\\front_end\\src\\views\\pages\\register\\RegisterJWT.vue","mtime":1582132801792},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      displayName: \"\",\n      page_id: \"\",\n      access_token: \"\",\n      password: \"\",\n      confirm_password: \"\"\n    };\n  },\n  computed: {\n    validateForm() {\n      return (\n        !this.errors.any() &&\n        this.displayName != \"\" &&\n        this.page_id != \"\" &&\n        this.access_token != \"\" &&\n        this.password != \"\" &&\n        this.confirm_password != \"\"\n      );\n    }\n  },\n  methods: {\n    checkLogin() {\n      // If user is already logged in notify\n      if (this.$store.getters.AppActiveUser.isLoggedIn) {\n        // Close animation if passed as payload\n        // this.$vs.loading.close()\n\n        this.$vs.notify({\n          title: \"Login Attempt\",\n          text: \"You are already logged in!\",\n          iconPack: \"feather\",\n          icon: \"icon-alert-circle\",\n          color: \"warning\"\n        });\n\n        return false;\n      }\n      return true;\n    },\n    logout() {\n      localStorage.removeItem(\"accessToken\");\n      this.$store.dispatch(\"logoutUser\");\n    },\n    registerUserJWt() {\n      // If form is not validated or user is already login return\n      // if (!this.validateForm || !this.checkLogin()) return;  //uncomment this in production\n\n      const payload = {\n        userDetails: {\n          displayName: this.displayName,\n          page_id: this.page_id,\n          access_token: this.access_token,\n          password: this.password,\n          confirmPassword: this.confirm_password\n        },\n        notify: this.$vs.notify\n      };\n      this.$store.dispatch(\"auth/registerUserJWT\", payload);\n    }\n  }\n};\n",{"version":3,"sources":["RegisterJWT.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegisterJWT.vue","sourceRoot":"src/views/pages/register","sourcesContent":["<!-- =========================================================================================\nFile Name: RegisterJWT.vue\nDescription: Register Page for JWT\n----------------------------------------------------------------------------------------\nItem Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\nAuthor URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div class=\"clearfix\">\n    <vs-input\n      v-validate=\"'required|alpha_dash|min:3'\"\n      data-vv-validate-on=\"blur\"\n      label-placeholder=\"Name\"\n      name=\"displayName\"\n      placeholder=\"Name\"\n      v-model=\"displayName\"\n      class=\"w-full\"\n    />\n    <span class=\"text-danger text-sm\">{{ errors.first(\"displayName\") }}</span>\n\n    <vs-input\n      v-validate=\"'required'\"\n      data-vv-validate-on=\"blur\"\n      name=\"page_id\"\n      label-placeholder=\"Page Id\"\n      placeholder=\"Page Id\"\n      v-model=\"page_id\"\n      class=\"w-full mt-6\"\n    />\n    <span class=\"text-danger text-sm\">{{ errors.first(\"page_id\") }}</span>\n    <vs-input\n      v-validate=\"'required'\"\n      data-vv-validate-on=\"blur\"\n      name=\"access_token\"\n      label-placeholder=\"Access Token\"\n      placeholder=\"Access Token\"\n      v-model=\"access_token\"\n      class=\"w-full mt-6\"\n    />\n    <span class=\"text-danger text-sm\">{{ errors.first(\"access_token\") }}</span>\n\n    <vs-input\n      ref=\"password\"\n      type=\"password\"\n      data-vv-validate-on=\"blur\"\n      v-validate=\"'required|min:6|max:10'\"\n      name=\"password\"\n      label-placeholder=\"Password\"\n      placeholder=\"Password\"\n      v-model=\"password\"\n      class=\"w-full mt-6\"\n    />\n    <span class=\"text-danger text-sm\">{{ errors.first(\"password\") }}</span>\n\n    <vs-input\n      type=\"password\"\n      v-validate=\"'min:6|max:10|confirmed:password'\"\n      data-vv-validate-on=\"blur\"\n      data-vv-as=\"password\"\n      name=\"confirm_password\"\n      label-placeholder=\"Confirm Password\"\n      placeholder=\"Confirm Password\"\n      v-model=\"confirm_password\"\n      class=\"w-full mt-6\"\n    />\n    <span class=\"text-danger text-sm\">{{\n      errors.first(\"confirm_password\")\n    }}</span>\n\n    <vs-button type=\"border\" @click=\"logout\" class=\"mt-6\">Logout</vs-button>\n    <vs-button\n      class=\"float-right mt-6\"\n      @click=\"registerUserJWt\"\n      :disabled=\"!validateForm\"\n      >Register</vs-button\n    >\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      displayName: \"\",\n      page_id: \"\",\n      access_token: \"\",\n      password: \"\",\n      confirm_password: \"\"\n    };\n  },\n  computed: {\n    validateForm() {\n      return (\n        !this.errors.any() &&\n        this.displayName != \"\" &&\n        this.page_id != \"\" &&\n        this.access_token != \"\" &&\n        this.password != \"\" &&\n        this.confirm_password != \"\"\n      );\n    }\n  },\n  methods: {\n    checkLogin() {\n      // If user is already logged in notify\n      if (this.$store.getters.AppActiveUser.isLoggedIn) {\n        // Close animation if passed as payload\n        // this.$vs.loading.close()\n\n        this.$vs.notify({\n          title: \"Login Attempt\",\n          text: \"You are already logged in!\",\n          iconPack: \"feather\",\n          icon: \"icon-alert-circle\",\n          color: \"warning\"\n        });\n\n        return false;\n      }\n      return true;\n    },\n    logout() {\n      localStorage.removeItem(\"accessToken\");\n      this.$store.dispatch(\"logoutUser\");\n    },\n    registerUserJWt() {\n      // If form is not validated or user is already login return\n      // if (!this.validateForm || !this.checkLogin()) return;  //uncomment this in production\n\n      const payload = {\n        userDetails: {\n          displayName: this.displayName,\n          page_id: this.page_id,\n          access_token: this.access_token,\n          password: this.password,\n          confirmPassword: this.confirm_password\n        },\n        notify: this.$vs.notify\n      };\n      this.$store.dispatch(\"auth/registerUserJWT\", payload);\n    }\n  }\n};\n</script>\n"]}]}
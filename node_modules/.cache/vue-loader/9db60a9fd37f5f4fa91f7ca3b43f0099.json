{"remainingRequest":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Programming\\Bot Dev\\front_end\\src\\components\\statistics-cards\\StatisticsCardLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Programming\\Bot Dev\\front_end\\src\\components\\statistics-cards\\StatisticsCardLine.vue","mtime":1581640619863},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AnimatedNumber from \"animated-number-vue\";\nimport VueApexCharts from \"vue-apexcharts\";\nimport chartConfigs from \"./chartConfigs.js\";\nimport _color from \"@/assets/utils/color.js\";\n\nexport default {\n  props: {\n    icon: {\n      type: String,\n      required: true\n    },\n    statistic: {\n      type: [Number, String],\n      required: true\n    },\n    statisticTitle: {\n      type: String\n    },\n    chartData: {\n      // type: Array,\n      // required: true\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    colorTo: {\n      type: String\n    },\n    // chartType: {\n    //     type: String,\n    //     default: 'line-chart',\n    // },\n    type: {\n      type: String,\n      default: \"line\"\n    },\n    iconRight: {\n      type: Boolean,\n      default: false\n    },\n    hideChart: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      chartOptions: null\n    };\n  },\n  watch: {\n    themePrimaryColor() {\n      this.$refs.apexChart.updateOptions({\n        theme: { monochrome: { color: this.getHex(this.color) } }\n      });\n    }\n  },\n  computed: {\n    themePrimaryColor() {\n      return this.$store.state.themePrimaryColor;\n    }\n  },\n  methods: {\n    getHex(color) {\n      if (_color.isColor(color)) {\n        let rgb = window\n          .getComputedStyle(document.documentElement)\n          .getPropertyValue(`--vs-${color}`);\n        rgb = rgb.split(\",\");\n        return (\n          \"#\" +\n          (\n            (1 << 24) +\n            (Number(rgb[0]) << 16) +\n            (Number(rgb[1]) << 8) +\n            Number(rgb[2])\n          )\n            .toString(16)\n            .slice(1)\n        );\n      }\n      return color;\n    },\n    gradientToColor(color) {\n      let gradientToColors = {\n        primary: \"#A9A2F6\",\n        success: \"#55DD92\",\n        warning: \"#ffc085\",\n        danger: \"#F97794\"\n      };\n\n      return gradientToColors[color]\n        ? gradientToColors[color]\n        : gradientToColors[\"primary\"];\n    }\n  },\n  components: {\n    VueApexCharts,\n    AnimatedNumber\n  },\n  created() {\n    if (this.type == \"area\") {\n      // assign chart options\n      this.chartOptions = Object.assign({}, chartConfigs.areaChartOptions);\n\n      this.chartOptions[\"theme\"] = {\n        monochrome: {\n          enabled: true,\n          color: this.getHex(this.color),\n          shadeTo: \"light\",\n          shadeIntensity: 0.65\n        }\n      };\n    } else if (this.type == \"line\") {\n      // Assign chart options\n      this.chartOptions = JSON.parse(\n        JSON.stringify(chartConfigs.lineChartOptions)\n      );\n\n      this.chartOptions.fill.gradient.gradientToColors = [\n        this.gradientToColor(this.colorTo || this.color)\n      ];\n      this.chartOptions.colors = [this.getHex(this.color)];\n    }\n  }\n};\n",{"version":3,"sources":["StatisticsCardLine.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StatisticsCardLine.vue","sourceRoot":"src/components/statistics-cards","sourcesContent":["<!-- =========================================================================================\n    File Name: StatisticsCard.vue\n    Description: Statistics card component\n========================================================================================== -->\n\n<template>\n  <vx-card class=\"overflow-hidden\">\n    <div slot=\"no-body\">\n      <div\n        class=\"p-6\"\n        :class=\"{\n          'flex justify-between flex-row-reverse items-center': iconRight,\n          'text-center': !iconRight && hideChart,\n          'pb-0': !hideChart\n        }\"\n      >\n        <feather-icon\n          :icon=\"icon\"\n          class=\"p-3 inline-flex rounded-full\"\n          :class=\"[`text-${color}`, { 'mb-4': !iconRight }]\"\n          :style=\"{ background: `rgba(var(--vs-${color}),.15)` }\"\n        ></feather-icon>\n        <div class=\"truncate\">\n          <h2 class=\"mb-1 font-bold\">\n            <animated-number round=\"1\" :value=\"statistic\" />\n          </h2>\n          <span>{{ statisticTitle }}</span>\n        </div>\n      </div>\n\n      <div class=\"line-area-chart\" v-if=\"!hideChart\">\n        <vue-apex-charts\n          ref=\"apexChart\"\n          :type=\"type\"\n          height=\"100\"\n          width=\"100%\"\n          :options=\"chartOptions\"\n          :series=\"chartData\"\n        />\n      </div>\n    </div>\n  </vx-card>\n</template>\n\n<script>\nimport AnimatedNumber from \"animated-number-vue\";\nimport VueApexCharts from \"vue-apexcharts\";\nimport chartConfigs from \"./chartConfigs.js\";\nimport _color from \"@/assets/utils/color.js\";\n\nexport default {\n  props: {\n    icon: {\n      type: String,\n      required: true\n    },\n    statistic: {\n      type: [Number, String],\n      required: true\n    },\n    statisticTitle: {\n      type: String\n    },\n    chartData: {\n      // type: Array,\n      // required: true\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    colorTo: {\n      type: String\n    },\n    // chartType: {\n    //     type: String,\n    //     default: 'line-chart',\n    // },\n    type: {\n      type: String,\n      default: \"line\"\n    },\n    iconRight: {\n      type: Boolean,\n      default: false\n    },\n    hideChart: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      chartOptions: null\n    };\n  },\n  watch: {\n    themePrimaryColor() {\n      this.$refs.apexChart.updateOptions({\n        theme: { monochrome: { color: this.getHex(this.color) } }\n      });\n    }\n  },\n  computed: {\n    themePrimaryColor() {\n      return this.$store.state.themePrimaryColor;\n    }\n  },\n  methods: {\n    getHex(color) {\n      if (_color.isColor(color)) {\n        let rgb = window\n          .getComputedStyle(document.documentElement)\n          .getPropertyValue(`--vs-${color}`);\n        rgb = rgb.split(\",\");\n        return (\n          \"#\" +\n          (\n            (1 << 24) +\n            (Number(rgb[0]) << 16) +\n            (Number(rgb[1]) << 8) +\n            Number(rgb[2])\n          )\n            .toString(16)\n            .slice(1)\n        );\n      }\n      return color;\n    },\n    gradientToColor(color) {\n      let gradientToColors = {\n        primary: \"#A9A2F6\",\n        success: \"#55DD92\",\n        warning: \"#ffc085\",\n        danger: \"#F97794\"\n      };\n\n      return gradientToColors[color]\n        ? gradientToColors[color]\n        : gradientToColors[\"primary\"];\n    }\n  },\n  components: {\n    VueApexCharts,\n    AnimatedNumber\n  },\n  created() {\n    if (this.type == \"area\") {\n      // assign chart options\n      this.chartOptions = Object.assign({}, chartConfigs.areaChartOptions);\n\n      this.chartOptions[\"theme\"] = {\n        monochrome: {\n          enabled: true,\n          color: this.getHex(this.color),\n          shadeTo: \"light\",\n          shadeIntensity: 0.65\n        }\n      };\n    } else if (this.type == \"line\") {\n      // Assign chart options\n      this.chartOptions = JSON.parse(\n        JSON.stringify(chartConfigs.lineChartOptions)\n      );\n\n      this.chartOptions.fill.gradient.gradientToColors = [\n        this.gradientToColor(this.colorTo || this.color)\n      ];\n      this.chartOptions.colors = [this.getHex(this.color)];\n    }\n  }\n};\n</script>\n"]}]}
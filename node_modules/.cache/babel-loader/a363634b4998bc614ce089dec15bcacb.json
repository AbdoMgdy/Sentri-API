{"remainingRequest":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js!E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Programming\\Bot Dev\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Programming\\Bot Dev\\front_end\\src\\views\\apps\\todo\\Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Programming\\Bot Dev\\front_end\\src\\views\\apps\\todo\\Todo.vue","mtime":1571665682000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moduleTodo from '@/store/todo/moduleTodo.js';\nimport TodoAddNew from \"./TodoAddNew.vue\";\nimport TodoTask from \"./TodoTask.vue\";\nimport TodoFilters from \"./TodoFilters.vue\";\nimport TodoEdit from \"./TodoEdit.vue\";\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nexport default {\n  data: function data() {\n    return {\n      currFilter: \"\",\n      clickNotClose: true,\n      displayPrompt: false,\n      taskIdToEdit: 0,\n      isSidebarActive: true,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.30\n      }\n    };\n  },\n  watch: {\n    todoFilter: function todoFilter() {\n      this.$refs.taskListPS.$el.scrollTop = 0;\n      this.toggleTodoSidebar(); // Fetch Tasks\n\n      var filter = this.$route.params.filter;\n      this.$store.dispatch(\"todo/fetchTasks\", {\n        filter: filter\n      });\n      this.$store.commit(\"todo/UPDATE_TODO_FILTER\", filter);\n    },\n    windowWidth: function windowWidth() {\n      this.setSidebarWidth();\n    }\n  },\n  computed: {\n    todo: function todo() {\n      return this.$store.state.todo.todoArray;\n    },\n    todoFilter: function todoFilter() {\n      return this.$route.params.filter;\n    },\n    taskList: function taskList() {\n      return this.$store.getters[\"todo/queriedTasks\"];\n    },\n    searchQuery: {\n      get: function get() {\n        return this.$store.state.todo.todoSearchQuery;\n      },\n      set: function set(val) {\n        this.$store.dispatch('todo/setTodoSearchQuery', val);\n      }\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  methods: {\n    showDisplayPrompt: function showDisplayPrompt(itemId) {\n      this.taskIdToEdit = itemId;\n      this.displayPrompt = true;\n    },\n    hidePrompt: function hidePrompt() {\n      this.displayPrompt = false;\n    },\n    setSidebarWidth: function setSidebarWidth() {\n      if (this.windowWidth < 992) {\n        this.isSidebarActive = this.clickNotClose = false;\n      } else {\n        this.isSidebarActive = this.clickNotClose = true;\n      }\n    },\n    toggleTodoSidebar: function toggleTodoSidebar() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!value && this.clickNotClose) return;\n      this.isSidebarActive = value;\n    }\n  },\n  components: {\n    TodoAddNew: TodoAddNew,\n    TodoTask: TodoTask,\n    TodoFilters: TodoFilters,\n    TodoEdit: TodoEdit,\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  created: function created() {\n    this.$store.registerModule('todo', moduleTodo);\n    this.setSidebarWidth();\n    var filter = this.$route.params.filter; // Fetch Tasks\n\n    this.$store.dispatch(\"todo/fetchTasks\", {\n      filter: filter\n    });\n    this.$store.commit(\"todo/UPDATE_TODO_FILTER\", filter); // Fetch Tags\n\n    this.$store.dispatch(\"todo/fetchTags\");\n  },\n  beforeUpdate: function beforeUpdate() {\n    this.currFilter = this.$route.params.filter;\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$store.unregisterModule('todo');\n  },\n  mounted: function mounted() {\n    this.$store.dispatch(\"todo/setTodoSearchQuery\", \"\");\n  }\n};",{"version":3,"sources":["Todo.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n    File Name: Todo.vue\n    Description: Todo Application to keep you ahead of time\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <div id=\"todo-app\" class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\">\n\n                <vs-sidebar class=\"items-no-padding\" parent=\"#todo-app\" :click-not-close=\"clickNotClose\" :hidden-background=\"clickNotClose\" v-model=\"isSidebarActive\">\n                    <todo-add-new />\n                    <VuePerfectScrollbar class=\"todo-scroll-area\" :settings=\"settings\" :key=\"$vs.rtl\">\n                    <todo-filters @closeSidebar=\"toggleTodoSidebar\"></todo-filters>\n                    </VuePerfectScrollbar>\n                </vs-sidebar>\n\n                <div :class=\"{'sidebar-spacer': clickNotClose}\" class=\"no-scroll-content border border-r-0 border-b-0 border-t-0 border-solid d-theme-border-grey-light no-scroll-content\">\n                    <div class=\"flex d-theme-dark-bg items-center border border-l-0 border-r-0 border-t-0 border-solid d-theme-border-grey-light\">\n\n                        <!-- TOGGLE SIDEBAR BUTTON -->\n                        <feather-icon class=\"md:inline-flex lg:hidden ml-4 mr-4 cursor-pointer\" icon=\"MenuIcon\" @click.stop=\"toggleTodoSidebar(true)\" />\n\n                        <!-- SEARCH BAR -->\n                        <vs-input icon-no-border size=\"large\" icon-pack=\"feather\" icon=\"icon-search\" placeholder=\"Search...\" v-model=\"searchQuery\" class=\"vs-input-no-border vs-input-no-shdow-focus w-full\" />\n                    </div>\n\n                    <!-- TODO LIST -->\n                    <VuePerfectScrollbar class=\"todo-content-scroll-area\" :settings=\"settings\" ref=\"taskListPS\" :key=\"$vs.rtl\">\n                        <transition-group class=\"todo-list\" name=\"list-enter-up\" tag=\"ul\" appear>\n                            <li class=\"cursor-pointer todo_todo-item\" v-for=\"(task, index) in taskList\" :key=\"String(currFilter) + String(task.id)\" :style=\"[{transitionDelay: (index * 0.1) + 's'}]\">\n\n                                <todo-task :taskId=\"task.id\" @showDisplayPrompt=\"showDisplayPrompt($event)\" :key=\"String(task.title) + String(task.desc)\" />\n                                <!--\n                                  Note: Remove \"todo-task\" component's key just concat lastUpdated field in li key list.\n                                  e.g. <li class=\"...\" v-for=\"...\" :key=\"String(currFilter) + String(task.id) + String(task.lastUpdated)\" .. >\n                                -->\n                            </li>\n                        </transition-group>\n                    </VuePerfectScrollbar>\n                    <!-- /TODO LIST -->\n                </div>\n\n                <!-- EDIT TODO DIALOG -->\n                <todo-edit :displayPrompt=\"displayPrompt\" :taskId=\"taskIdToEdit\" @hideDisplayPrompt=\"hidePrompt\" v-if=\"displayPrompt\"></todo-edit>\n    </div>\n</template>\n\n<script>\nimport moduleTodo          from '@/store/todo/moduleTodo.js'\nimport TodoAddNew          from \"./TodoAddNew.vue\"\nimport TodoTask            from \"./TodoTask.vue\"\nimport TodoFilters         from \"./TodoFilters.vue\"\nimport TodoEdit            from \"./TodoEdit.vue\"\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\nexport default {\n  data() {\n    return {\n      currFilter           : \"\",\n      clickNotClose        : true,\n      displayPrompt        : false,\n      taskIdToEdit         : 0,\n      isSidebarActive      : true,\n      settings : {\n        maxScrollbarLength : 60,\n        wheelSpeed         : 0.30,\n      },\n    }\n  },\n  watch: {\n    todoFilter() {\n      this.$refs.taskListPS.$el.scrollTop = 0\n      this.toggleTodoSidebar()\n\n      // Fetch Tasks\n      let filter = this.$route.params.filter\n      this.$store.dispatch(\"todo/fetchTasks\", { filter: filter })\n      this.$store.commit(\"todo/UPDATE_TODO_FILTER\", filter)\n    },\n    windowWidth() {\n      this.setSidebarWidth()\n    },\n  },\n  computed: {\n    todo()        { return this.$store.state.todo.todoArray              },\n    todoFilter()  { return this.$route.params.filter                     },\n    taskList()    { return this.$store.getters[\"todo/queriedTasks\"]      },\n    searchQuery:  {\n      get()       { return this.$store.state.todo.todoSearchQuery        },\n      set(val)    { this.$store.dispatch('todo/setTodoSearchQuery', val) }\n    },\n    windowWidth() { return this.$store.state.windowWidth }\n  },\n  methods: {\n    showDisplayPrompt(itemId) {\n      this.taskIdToEdit  = itemId\n      this.displayPrompt = true\n    },\n    hidePrompt() {\n      this.displayPrompt = false\n    },\n    setSidebarWidth() {\n      if (this.windowWidth < 992) {\n        this.isSidebarActive = this.clickNotClose = false\n      } else {\n        this.isSidebarActive = this.clickNotClose = true\n      }\n    },\n    toggleTodoSidebar(value = false) {\n      if (!value && this.clickNotClose) return\n      this.isSidebarActive = value\n    },\n  },\n  components: {\n    TodoAddNew,\n    TodoTask,\n    TodoFilters,\n    TodoEdit,\n    VuePerfectScrollbar\n  },\n  created() {\n    this.$store.registerModule('todo', moduleTodo)\n    this.setSidebarWidth()\n\n    let filter = this.$route.params.filter\n\n    // Fetch Tasks\n    this.$store.dispatch(\"todo/fetchTasks\", { filter: filter })\n    this.$store.commit(\"todo/UPDATE_TODO_FILTER\", filter)\n\n    // Fetch Tags\n    this.$store.dispatch(\"todo/fetchTags\")\n  },\n  beforeUpdate() {\n    this.currFilter = this.$route.params.filter\n  },\n  beforeDestroy: function() {\n    this.$store.unregisterModule('todo')\n  },\n  mounted() {\n    this.$store.dispatch(\"todo/setTodoSearchQuery\", \"\")\n  }\n}\n\n</script>\n\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/apps/todo.scss\";\n</style>\n"],"sourceRoot":"src/views/apps/todo"}]}
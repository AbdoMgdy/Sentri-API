{"remainingRequest":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\babel-loader\\lib\\index.js!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\src\\http\\requests\\auth\\jwt\\index.js","dependencies":[{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\src\\http\\requests\\auth\\jwt\\index.js","mtime":1570207876000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from \"../../../axios/index.js\";\nimport store from \"../../../../store/store.js\"; // Token Refresh\n\nvar isAlreadyFetchingAccessToken = false;\nvar subscribers = [];\n\nfunction onAccessTokenFetched(access_token) {\n  subscribers = subscribers.filter(function (callback) {\n    return callback(access_token);\n  });\n}\n\nfunction addSubscriber(callback) {\n  subscribers.push(callback);\n}\n\nexport default {\n  init: function init() {\n    axios.interceptors.response.use(function (response) {\n      return response;\n    }, function (error) {\n      // const { config, response: { status } } = error\n      var config = error.config,\n          response = error.response;\n      var originalRequest = config; // if (status === 401) {\n\n      if (response && response.status === 401) {\n        if (!isAlreadyFetchingAccessToken) {\n          isAlreadyFetchingAccessToken = true;\n          store.dispatch(\"auth/fetchAccessToken\").then(function (access_token) {\n            isAlreadyFetchingAccessToken = false;\n            onAccessTokenFetched(access_token);\n          });\n        }\n\n        var retryOriginalRequest = new Promise(function (resolve) {\n          addSubscriber(function (access_token) {\n            originalRequest.headers.Authorization = 'Bearer ' + access_token;\n            resolve(axios(originalRequest));\n          });\n        });\n        return retryOriginalRequest;\n      }\n\n      return Promise.reject(error);\n    });\n  },\n  login: function login(email, pwd) {\n    return axios.post(\"/api/auth/login\", {\n      email: email,\n      password: pwd\n    });\n  },\n  registerUser: function registerUser(name, email, pwd) {\n    return axios.post(\"/api/auth/register\", {\n      displayName: name,\n      email: email,\n      password: pwd\n    });\n  },\n  refreshToken: function refreshToken() {\n    return axios.post(\"/api/auth/refresh-token\", {\n      accessToken: localStorage.getItem(\"accessToKen\")\n    });\n  }\n};",{"version":3,"sources":["E:/Programming/JS/vuexy-vuejs-admin/full-version/src/http/requests/auth/jwt/index.js"],"names":["axios","store","isAlreadyFetchingAccessToken","subscribers","onAccessTokenFetched","access_token","filter","callback","addSubscriber","push","init","interceptors","response","use","error","config","originalRequest","status","dispatch","then","retryOriginalRequest","Promise","resolve","headers","Authorization","reject","login","email","pwd","post","password","registerUser","name","displayName","refreshToken","accessToken","localStorage","getItem"],"mappings":"AAAA,OAAOA,KAAP;AACA,OAAOC,KAAP,mC,CAEA;;AACA,IAAIC,4BAA4B,GAAG,KAAnC;AACA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,SAASC,oBAAT,CAA8BC,YAA9B,EAA4C;AAC1CF,EAAAA,WAAW,GAAGA,WAAW,CAACG,MAAZ,CAAmB,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACF,YAAD,CAAZ;AAAA,GAA3B,CAAd;AACD;;AAED,SAASG,aAAT,CAAuBD,QAAvB,EAAiC;AAC/BJ,EAAAA,WAAW,CAACM,IAAZ,CAAiBF,QAAjB;AACD;;AAED,eAAe;AACbG,EAAAA,IADa,kBACN;AACLV,IAAAA,KAAK,CAACW,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAAUD,QAAV,EAAoB;AAClD,aAAOA,QAAP;AACD,KAFD,EAEG,UAAUE,KAAV,EAAiB;AAClB;AADkB,UAEVC,MAFU,GAEWD,KAFX,CAEVC,MAFU;AAAA,UAEFH,QAFE,GAEWE,KAFX,CAEFF,QAFE;AAGlB,UAAMI,eAAe,GAAGD,MAAxB,CAHkB,CAKlB;;AACA,UAAIH,QAAQ,IAAIA,QAAQ,CAACK,MAAT,KAAoB,GAApC,EAAyC;AACvC,YAAI,CAACf,4BAAL,EAAmC;AACjCA,UAAAA,4BAA4B,GAAG,IAA/B;AACAD,UAAAA,KAAK,CAACiB,QAAN,CAAe,uBAAf,EACGC,IADH,CACQ,UAACd,YAAD,EAAkB;AACtBH,YAAAA,4BAA4B,GAAG,KAA/B;AACAE,YAAAA,oBAAoB,CAACC,YAAD,CAApB;AACD,WAJH;AAKD;;AAED,YAAMe,oBAAoB,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACpDd,UAAAA,aAAa,CAAC,UAAAH,YAAY,EAAI;AAC5BW,YAAAA,eAAe,CAACO,OAAhB,CAAwBC,aAAxB,GAAwC,YAAYnB,YAApD;AACAiB,YAAAA,OAAO,CAACtB,KAAK,CAACgB,eAAD,CAAN,CAAP;AACD,WAHY,CAAb;AAID,SAL4B,CAA7B;AAMA,eAAOI,oBAAP;AACD;;AACD,aAAOC,OAAO,CAACI,MAAR,CAAeX,KAAf,CAAP;AACD,KA3BD;AA4BD,GA9BY;AA+BbY,EAAAA,KA/Ba,iBA+BPC,KA/BO,EA+BAC,GA/BA,EA+BK;AAChB,WAAO5B,KAAK,CAAC6B,IAAN,CAAW,iBAAX,EAA8B;AAACF,MAAAA,KAAK,EAAEA,KAAR;AAAeG,MAAAA,QAAQ,EAAEF;AAAzB,KAA9B,CAAP;AACD,GAjCY;AAkCbG,EAAAA,YAlCa,wBAkCAC,IAlCA,EAkCML,KAlCN,EAkCaC,GAlCb,EAkCkB;AAC7B,WAAO5B,KAAK,CAAC6B,IAAN,CAAW,oBAAX,EAAiC;AAACI,MAAAA,WAAW,EAAED,IAAd;AAAoBL,MAAAA,KAAK,EAAEA,KAA3B;AAAkCG,MAAAA,QAAQ,EAAEF;AAA5C,KAAjC,CAAP;AACD,GApCY;AAqCbM,EAAAA,YArCa,0BAqCE;AACb,WAAOlC,KAAK,CAAC6B,IAAN,CAAW,yBAAX,EAAsC;AAACM,MAAAA,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAd,KAAtC,CAAP;AACD;AAvCY,CAAf","sourcesContent":["import axios from \"../../../axios/index.js\"\nimport store from \"../../../../store/store.js\"\n\n// Token Refresh\nlet isAlreadyFetchingAccessToken = false\nlet subscribers = []\n\nfunction onAccessTokenFetched(access_token) {\n  subscribers = subscribers.filter(callback => callback(access_token))\n}\n\nfunction addSubscriber(callback) {\n  subscribers.push(callback)\n}\n\nexport default {\n  init() {\n    axios.interceptors.response.use(function (response) {\n      return response\n    }, function (error) {\n      // const { config, response: { status } } = error\n      const { config, response } = error\n      const originalRequest = config\n\n      // if (status === 401) {\n      if (response && response.status === 401) {\n        if (!isAlreadyFetchingAccessToken) {\n          isAlreadyFetchingAccessToken = true\n          store.dispatch(\"auth/fetchAccessToken\")\n            .then((access_token) => {\n              isAlreadyFetchingAccessToken = false\n              onAccessTokenFetched(access_token)\n            })\n        }\n\n        const retryOriginalRequest = new Promise((resolve) => {\n          addSubscriber(access_token => {\n            originalRequest.headers.Authorization = 'Bearer ' + access_token\n            resolve(axios(originalRequest))\n          })\n        })\n        return retryOriginalRequest\n      }\n      return Promise.reject(error)\n    })\n  },\n  login(email, pwd) {\n    return axios.post(\"/api/auth/login\", {email: email, password: pwd})\n  },\n  registerUser(name, email, pwd) {\n    return axios.post(\"/api/auth/register\", {displayName: name, email: email, password: pwd})\n  },\n  refreshToken() {\n    return axios.post(\"/api/auth/refresh-token\", {accessToken: localStorage.getItem(\"accessToKen\")})\n  }\n}\n"]}]}
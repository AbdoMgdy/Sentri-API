{"remainingRequest":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\babel-loader\\lib\\index.js!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\src\\store\\chat\\moduleChatGetters.js","dependencies":[{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\src\\store\\chat\\moduleChatGetters.js","mtime":1570206916000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\n\n/*=========================================================================================\n  File Name: moduleChatGetters.js\n  Description: Chat Module Getters\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n// import contacts from '@/views/apps/chat/contacts'\nexport default {\n  chatDataOfUser: function chatDataOfUser(state) {\n    return function (id) {\n      return state.chats[Object.keys(state.chats).find(function (key) {\n        return key == id;\n      })];\n    };\n  },\n  chatContacts: function chatContacts(state, getters) {\n    var chatContacts = state.chatContacts.filter(function (contact) {\n      return contact.displayName.toLowerCase().includes(state.chatSearchQuery.toLowerCase());\n    });\n    chatContacts.sort(function (x, y) {\n      var timeX = getters.chatLastMessaged(x.uid).time;\n      var timeY = getters.chatLastMessaged(y.uid).time;\n      return new Date(timeY) - new Date(timeX);\n    });\n    return chatContacts.sort(function (x, y) {\n      var chatDataX = getters.chatDataOfUser(x.uid);\n      var chatDataY = getters.chatDataOfUser(y.uid);\n      if (chatDataX && chatDataY) return chatDataY.isPinned - chatDataX.isPinned;else return 0;\n    });\n  },\n  contacts: function contacts(state) {\n    return state.contacts.filter(function (contact) {\n      return contact.displayName.toLowerCase().includes(state.chatSearchQuery.toLowerCase());\n    });\n  },\n  contact: function contact(state) {\n    return function (contactId) {\n      return state.contacts.find(function (contact) {\n        return contact.uid == contactId;\n      });\n    };\n  },\n  chats: function chats(state) {\n    return state.chats;\n  },\n  chatUser: function chatUser(state, getters, rootState) {\n    return function (id) {\n      return state.contacts.find(function (contact) {\n        return contact.uid == id;\n      }) || rootState.AppActiveUser;\n    };\n  },\n  chatLastMessaged: function chatLastMessaged(state, getters) {\n    return function (id) {\n      if (getters.chatDataOfUser(id)) return getters.chatDataOfUser(id).msg.slice(-1)[0];else return false;\n    };\n  },\n  chatUnseenMessages: function chatUnseenMessages(state, getters) {\n    return function (id) {\n      var unseenMsg = 0;\n      var chatData = getters.chatDataOfUser(id);\n\n      if (chatData) {\n        chatData.msg.map(function (msg) {\n          if (!msg.isSeen && !msg.isSent) unseenMsg++;\n        });\n      }\n\n      return unseenMsg;\n    };\n  }\n};",{"version":3,"sources":["E:/Programming/JS/vuexy-vuejs-admin/full-version/src/store/chat/moduleChatGetters.js"],"names":["chatDataOfUser","state","id","chats","Object","keys","find","key","chatContacts","getters","filter","contact","displayName","toLowerCase","includes","chatSearchQuery","sort","x","y","timeX","chatLastMessaged","uid","time","timeY","Date","chatDataX","chatDataY","isPinned","contacts","contactId","chatUser","rootState","AppActiveUser","msg","slice","chatUnseenMessages","unseenMsg","chatData","map","isSeen","isSent"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: moduleChatGetters.js\n  Description: Chat Module Getters\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\n\n// import contacts from '@/views/apps/chat/contacts'\n\nexport default {\n    chatDataOfUser: state => id => {\n        return state.chats[Object.keys(state.chats).find(key => key == id)]\n    },\n    chatContacts: (state, getters) => {\n      let chatContacts = state.chatContacts.filter((contact) => contact.displayName.toLowerCase().includes(state.chatSearchQuery.toLowerCase()))\n\n      chatContacts.sort((x,y) => {\n        let timeX = getters.chatLastMessaged(x.uid).time\n        let timeY = getters.chatLastMessaged(y.uid).time\n        return (new Date(timeY) - new Date(timeX))\n      })\n\n      return chatContacts.sort((x,y) => {\n        const chatDataX = getters.chatDataOfUser(x.uid)\n        const chatDataY = getters.chatDataOfUser(y.uid)\n        if(chatDataX && chatDataY) return (chatDataY.isPinned - chatDataX.isPinned)\n        else return 0\n      })\n    },\n    contacts: (state) => state.contacts.filter((contact) => contact.displayName.toLowerCase().includes(state.chatSearchQuery.toLowerCase())),\n    contact: (state) => contactId => state.contacts.find((contact) => contact.uid == contactId),\n    chats: (state) => state.chats,\n    chatUser: (state, getters, rootState) => id => state.contacts.find((contact) => contact.uid == id) || rootState.AppActiveUser,\n\n    chatLastMessaged: (state, getters) => id => {\n        if(getters.chatDataOfUser(id)) return getters.chatDataOfUser(id).msg.slice(-1)[0];\n        else return false\n    },\n    chatUnseenMessages: (state, getters) => id => {\n        let unseenMsg = 0;\n        const chatData = getters.chatDataOfUser(id);\n        if(chatData) {\n            chatData.msg.map((msg) => {\n                if(!msg.isSeen && !msg.isSent) unseenMsg++;\n            })\n        }\n        return unseenMsg;\n    },\n}\n"]}]}
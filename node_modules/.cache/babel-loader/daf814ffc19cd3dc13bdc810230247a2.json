{"remainingRequest":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js!E:\\Programming\\Bot Dev\\front_end\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Programming\\Bot Dev\\front_end\\src\\store\\data-list\\moduleDataListActions.js","dependencies":[{"path":"E:\\Programming\\Bot Dev\\front_end\\src\\store\\data-list\\moduleDataListActions.js","mtime":1582172204311},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*=========================================================================================\n  File Name: moduleCalendarActions.js\n  Description: Calendar Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport axios from \"@/axios.js\";\nimport router from \"../../router\";\nexport default {\n  addItem: function addItem(_ref, item) {\n    var commit = _ref.commit;\n    commit(\"ADD_ITEM\", item);\n  },\n  fetchDataListItems: function fetchDataListItems(_ref2) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"orders\").then(function (response) {\n        if (response.status != 200) {\n          // fix error when flask jwt token gives error 422\n          router.push(\"/login\");\n        }\n\n        commit(\"SET_PRODUCTS\", response.data);\n        resolve(response);\n      }).catch(function (error) {\n        // fix error when flask jwt token gives error 422\n        router.push(\"/login\");\n        reject(error);\n      });\n    });\n  },\n  fetchUsers: function fetchUsers(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"customers\").then(function (response) {\n        commit(\"SET_USERS\", response.data.customers);\n        resolve(response);\n      }).catch(function (error) {\n        console.log(error);\n        reject(error);\n      });\n    });\n  },\n  // fetchEventLabels({ commit }) {\n  //   return new Promise((resolve, reject) => {\n  //     axios.get(\"/api/apps/calendar/labels\")\n  //       .then((response) => {\n  //         commit('SET_LABELS', response.data)\n  //         resolve(response)\n  //       })\n  //       .catch((error) => { reject(error) })\n  //   })\n  // },\n  updateItem: function updateItem(_ref4, item) {\n    var commit = _ref4.commit;\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"order_number\", item.number);\n    bodyFormData.set(\"order_status\", item.status);\n    return new Promise(function (resolve, reject) {\n      axios({\n        method: \"post\",\n        url: \"https://cors-anywhere.herokuapp.com/https://rest-bot-dev.herokuapp.com/edit_order_status\",\n        data: bodyFormData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        commit(\"UPDATE_PRODUCT\", item);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  removeItem: function removeItem(_ref5, itemId) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      axios.delete(\"/api/data-list/products/\".concat(itemId)).then(function (response) {\n        commit(\"REMOVE_ITEM\", itemId);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  } // eventDragged({ commit }, payload) {\n  //   return new Promise((resolve, reject) => {\n  //     axios.post(`/api/apps/calendar/event/dragged/${payload.event.id}`, {payload: payload})\n  //       .then((response) => {\n  //         // Convert Date String to Date Object\n  //         let event = response.data\n  //         event.startDate = new Date(event.startDate)\n  //         event.endDate = new Date(event.endDate)\n  //         commit('UPDATE_EVENT', event)\n  //         resolve(response)\n  //       })\n  //       .catch((error) => { reject(error) })\n  //   })\n  // },\n\n};",{"version":3,"sources":["E:/Programming/Bot Dev/front_end/src/store/data-list/moduleDataListActions.js"],"names":["axios","router","addItem","item","commit","fetchDataListItems","Promise","resolve","reject","get","then","response","status","push","data","catch","error","fetchUsers","customers","console","log","updateItem","bodyFormData","FormData","set","number","method","url","headers","removeItem","itemId","delete"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: moduleCalendarActions.js\n  Description: Calendar Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\nimport axios from \"@/axios.js\";\nimport router from \"../../router\";\n\nexport default {\n  addItem({ commit }, item) {\n    commit(\"ADD_ITEM\", item);\n  },\n  fetchDataListItems({ commit }) {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"orders\")\n        .then(response => {\n          if (response.status != 200) {\n            // fix error when flask jwt token gives error 422\n            router.push(\"/login\");\n          }\n\n          commit(\"SET_PRODUCTS\", response.data);\n          resolve(response);\n        })\n        .catch(error => {\n          \n            // fix error when flask jwt token gives error 422\n            router.push(\"/login\");\n          \n          reject(error);\n        });\n    });\n  },\n  fetchUsers({ commit }) {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"customers\")\n        .then(response => {\n          commit(\"SET_USERS\", response.data.customers);\n\n          resolve(response);\n        })\n        .catch(error => {\n          console.log(error);\n          reject(error);\n        });\n    });\n  },\n  // fetchEventLabels({ commit }) {\n  //   return new Promise((resolve, reject) => {\n  //     axios.get(\"/api/apps/calendar/labels\")\n  //       .then((response) => {\n  //         commit('SET_LABELS', response.data)\n  //         resolve(response)\n  //       })\n  //       .catch((error) => { reject(error) })\n  //   })\n  // },\n  updateItem({ commit }, item) {\n    let bodyFormData = new FormData();\n    bodyFormData.set(\"order_number\", item.number);\n    bodyFormData.set(\"order_status\", item.status);\n    return new Promise((resolve, reject) => {\n      axios({\n        method: \"post\",\n        url:\n          \"https://cors-anywhere.herokuapp.com/https://rest-bot-dev.herokuapp.com/edit_order_status\",\n        data: bodyFormData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n        .then(response => {\n          commit(\"UPDATE_PRODUCT\", item);\n          resolve(response);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  },\n  removeItem({ commit }, itemId) {\n    return new Promise((resolve, reject) => {\n      axios\n        .delete(`/api/data-list/products/${itemId}`)\n        .then(response => {\n          commit(\"REMOVE_ITEM\", itemId);\n          resolve(response);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n  // eventDragged({ commit }, payload) {\n  //   return new Promise((resolve, reject) => {\n  //     axios.post(`/api/apps/calendar/event/dragged/${payload.event.id}`, {payload: payload})\n  //       .then((response) => {\n\n  //         // Convert Date String to Date Object\n  //         let event = response.data\n  //         event.startDate = new Date(event.startDate)\n  //         event.endDate = new Date(event.endDate)\n\n  //         commit('UPDATE_EVENT', event)\n  //         resolve(response)\n  //       })\n  //       .catch((error) => { reject(error) })\n  //   })\n  // },\n};\n"]}]}
{"remainingRequest":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js!E:\\Programming\\Bot Dev\\front_end\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Programming\\Bot Dev\\front_end\\src\\store\\auth\\moduleAuthActions.js","dependencies":[{"path":"E:\\Programming\\Bot Dev\\front_end\\src\\store\\auth\\moduleAuthActions.js","mtime":1582152926604},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*=========================================================================================\n  File Name: moduleAuthActions.js\n  Description: Auth Module Actions\n\n==========================================================================================*/\nimport jwt from \"../../http/requests/auth/jwt/index.js\";\nimport store from \"../../store/store\";\nimport router from \"@/router\";\nexport default {\n  setBearerToken: function setBearerToken(_ref) {\n    var commit = _ref.commit;\n    commit(\"SET_BEARER\", localStorage.accessToken);\n  },\n  // JWT\n  loginJWT: function loginJWT(_ref2, payload) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      jwt.login(payload.userDetails.username, payload.userDetails.password).then(function (response) {\n        // If there's user data in response\n        if (response.data.userData) {\n          store.dispatch(\"loginUser\"); // Set accessToken\n\n          localStorage.setItem(\"accessToken\", response.data.accessToken); // Update user details\n\n          commit(\"UPDATE_USER_INFO\", response.data.userData, {\n            root: true\n          }); // Set bearer token in axios\n\n          commit(\"SET_BEARER\", response.data.accessToken); // Navigate User to homepage\n\n          router.push({\n            path: \"/\"\n          });\n          resolve(response);\n        } else {\n          reject({\n            message: \"Wrong Usernmae or Password\"\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n        reject(error);\n      });\n    });\n  },\n  registerUserJWT: function registerUserJWT(_ref3, payload) {\n    var commit = _ref3.commit;\n    var _payload$userDetails = payload.userDetails,\n        displayName = _payload$userDetails.displayName,\n        page_id = _payload$userDetails.page_id,\n        access_token = _payload$userDetails.access_token,\n        password = _payload$userDetails.password,\n        confirmPassword = _payload$userDetails.confirmPassword;\n    return new Promise(function (resolve, reject) {\n      // Check confirm password\n      if (password !== confirmPassword) {\n        reject({\n          message: \"Password doesn't match. Please try again.\"\n        });\n      }\n\n      jwt.registerUser(displayName, password, page_id, access_token).then(function (response) {\n        // Update data in localStorage\n        localStorage.setItem(\"accessToken\", response.data.accessToken);\n        commit(\"UPDATE_USER_INFO\", response.data.userData, {\n          root: true\n        }); // Redirect User\n\n        router.push({\n          path: \"/\"\n        });\n        resolve(response);\n      }).catch(function (error) {\n        console.log(error);\n        reject(error);\n      });\n    });\n  },\n  fetchAccessToken: function fetchAccessToken() {\n    return new Promise(function (resolve) {\n      jwt.refreshToken().then(function (response) {\n        resolve(response);\n      });\n    });\n  }\n};",{"version":3,"sources":["E:/Programming/Bot Dev/front_end/src/store/auth/moduleAuthActions.js"],"names":["jwt","store","router","setBearerToken","commit","localStorage","accessToken","loginJWT","payload","Promise","resolve","reject","login","userDetails","username","password","then","response","data","userData","dispatch","setItem","root","push","path","message","catch","error","console","log","registerUserJWT","displayName","page_id","access_token","confirmPassword","registerUser","fetchAccessToken","refreshToken"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: moduleAuthActions.js\n  Description: Auth Module Actions\n\n==========================================================================================*/\n\nimport jwt from \"../../http/requests/auth/jwt/index.js\";\nimport store from \"../../store/store\";\nimport router from \"@/router\";\n\nexport default {\n  setBearerToken({ commit }) {\n    commit(\"SET_BEARER\", localStorage.accessToken);\n  },\n  // JWT\n  loginJWT({ commit }, payload) {\n    return new Promise((resolve, reject) => {\n      jwt\n        .login(payload.userDetails.username, payload.userDetails.password)\n        .then(response => {\n          // If there's user data in response\n          if (response.data.userData) {\n            store.dispatch(\"loginUser\");\n            // Set accessToken\n            localStorage.setItem(\"accessToken\", response.data.accessToken);\n\n            // Update user details\n            commit(\"UPDATE_USER_INFO\", response.data.userData, { root: true });\n\n            // Set bearer token in axios\n            commit(\"SET_BEARER\", response.data.accessToken);\n\n            // Navigate User to homepage\n            router.push({ path: \"/\" });\n            resolve(response);\n          } else {\n            reject({ message: \"Wrong Usernmae or Password\" });\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          reject(error);\n        });\n    });\n  },\n  registerUserJWT({ commit }, payload) {\n    const {\n      displayName,\n      page_id,\n      access_token,\n      password,\n      confirmPassword\n    } = payload.userDetails;\n\n    return new Promise((resolve, reject) => {\n      // Check confirm password\n      if (password !== confirmPassword) {\n        reject({ message: \"Password doesn't match. Please try again.\" });\n      }\n\n      jwt\n        .registerUser(displayName, password, page_id, access_token)\n        .then(response => {\n          // Update data in localStorage\n          localStorage.setItem(\"accessToken\", response.data.accessToken);\n          commit(\"UPDATE_USER_INFO\", response.data.userData, {\n            root: true\n          });\n\n          // Redirect User\n          router.push({ path: \"/\" });\n          resolve(response);\n        })\n        .catch(error => {\n          console.log(error);\n          reject(error);\n        });\n    });\n  },\n  fetchAccessToken() {\n    return new Promise(resolve => {\n      jwt.refreshToken().then(response => {\n        resolve(response);\n      });\n    });\n  }\n};\n"]}]}
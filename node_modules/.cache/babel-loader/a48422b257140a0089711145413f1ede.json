{"remainingRequest":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\babel-loader\\lib\\index.js!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\src\\store\\chat\\moduleChatActions.js","dependencies":[{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\src\\store\\chat\\moduleChatActions.js","mtime":1570206916000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*=========================================================================================\n  File Name: moduleChatActions.js\n  Description: Chat Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport axios from \"@/axios.js\";\nexport default {\n  setChatSearchQuery: function setChatSearchQuery(_ref, query) {\n    var commit = _ref.commit;\n    commit('SET_CHAT_SEARCH_QUERY', query);\n  },\n  updateAboutChat: function updateAboutChat(_ref2, value) {\n    var commit = _ref2.commit,\n        rootState = _ref2.rootState;\n    commit('UPDATE_ABOUT_CHAT', {\n      rootState: rootState,\n      value: value\n    });\n  },\n  updateStatusChat: function updateStatusChat(_ref3, value) {\n    var commit = _ref3.commit,\n        rootState = _ref3.rootState;\n    commit('UPDATE_STATUS_CHAT', {\n      rootState: rootState,\n      value: value\n    });\n  },\n  // API CALLS\n  sendChatMessage: function sendChatMessage(_ref4, payload) {\n    var getters = _ref4.getters,\n        commit = _ref4.commit,\n        dispatch = _ref4.dispatch;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/chat/msg\", {\n        payload: payload\n      }).then(function (response) {\n        payload.chatData = getters.chatDataOfUser(payload.id);\n\n        if (!payload.chatData) {\n          dispatch(\"fetchChatContacts\");\n        }\n\n        commit('SEND_CHAT_MESSAGE', payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Get contacts from server. Also change in store\n  fetchContacts: function fetchContacts(_ref5) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/chat/contacts\", {\n        params: {\n          q: \"\"\n        }\n      }).then(function (response) {\n        commit('UPDATE_CONTACTS', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Get chat-contacts from server. Also change in store\n  fetchChatContacts: function fetchChatContacts(_ref6) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/chat/chat-contacts\", {\n        params: {\n          q: \"\"\n        }\n      }).then(function (response) {\n        commit('UPDATE_CHAT_CONTACTS', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Get chats from server. Also change in store\n  fetchChats: function fetchChats(_ref7) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/chat/chats\").then(function (response) {\n        commit('UPDATE_CHATS', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  markSeenAllMessages: function markSeenAllMessages(_ref8, id) {\n    var getters = _ref8.getters,\n        commit = _ref8.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/chat/mark-all-seen\", {\n        id: id\n      }).then(function (response) {\n        commit('MARK_SEEN_ALL_MESSAGES', {\n          id: id,\n          chatData: getters.chatDataOfUser(id)\n        });\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  toggleIsPinned: function toggleIsPinned(_ref9, payload) {\n    var commit = _ref9.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/chat/set-pinned/\", {\n        contactId: payload.id,\n        value: payload.value\n      }).then(function (response) {\n        commit('TOGGLE_IS_PINNED', payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};",{"version":3,"sources":["E:/Programming/JS/vuexy-vuejs-admin/full-version/src/store/chat/moduleChatActions.js"],"names":["axios","setChatSearchQuery","query","commit","updateAboutChat","value","rootState","updateStatusChat","sendChatMessage","payload","getters","dispatch","Promise","resolve","reject","post","then","response","chatData","chatDataOfUser","id","catch","error","fetchContacts","get","params","q","data","fetchChatContacts","fetchChats","markSeenAllMessages","toggleIsPinned","contactId"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: moduleChatActions.js\n  Description: Chat Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\nimport axios from \"@/axios.js\"\n\nexport default {\n    setChatSearchQuery({ commit }, query){\n        commit('SET_CHAT_SEARCH_QUERY', query)\n    },\n    updateAboutChat({ commit, rootState }, value) {\n        commit('UPDATE_ABOUT_CHAT', {rootState: rootState, value: value})\n    },\n    updateStatusChat({ commit, rootState }, value) {\n        commit('UPDATE_STATUS_CHAT', {rootState: rootState, value: value})\n    },\n\n    // API CALLS\n    sendChatMessage({ getters, commit, dispatch }, payload) {\n      return new Promise((resolve, reject) => {\n        axios.post(\"/api/apps/chat/msg\", {payload: payload})\n          .then((response) => {\n            payload.chatData = getters.chatDataOfUser(payload.id)\n            if(!payload.chatData) { dispatch(\"fetchChatContacts\") }\n            commit('SEND_CHAT_MESSAGE', payload)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    // Get contacts from server. Also change in store\n    fetchContacts({ commit }) {\n      return new Promise((resolve, reject) => {\n        axios.get(\"/api/apps/chat/contacts\", {params: {q: \"\"}})\n          .then((response) => {\n            commit('UPDATE_CONTACTS', response.data)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    // Get chat-contacts from server. Also change in store\n    fetchChatContacts({ commit }) {\n      return new Promise((resolve, reject) => {\n        axios.get(\"/api/apps/chat/chat-contacts\", {params: {q: \"\"}})\n          .then((response) => {\n            commit('UPDATE_CHAT_CONTACTS', response.data)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    // Get chats from server. Also change in store\n    fetchChats({ commit }) {\n      return new Promise((resolve, reject) => {\n        axios.get(\"/api/apps/chat/chats\")\n          .then((response) => {\n            commit('UPDATE_CHATS', response.data)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    markSeenAllMessages({ getters, commit }, id) {\n\n      return new Promise((resolve, reject) => {\n        axios.post(\"/api/apps/chat/mark-all-seen\", {id: id})\n          .then((response) => {\n            commit('MARK_SEEN_ALL_MESSAGES', {\n              id: id,\n              chatData: getters.chatDataOfUser(id)\n            })\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    toggleIsPinned({ commit }, payload) {\n      return new Promise((resolve, reject) => {\n        axios.post(\"/api/apps/chat/set-pinned/\", {contactId: payload.id, value: payload.value})\n          .then((response) => {\n            commit('TOGGLE_IS_PINNED', payload)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n}\n"]}]}
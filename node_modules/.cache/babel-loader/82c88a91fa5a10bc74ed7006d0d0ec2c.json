{"remainingRequest":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\babel-loader\\lib\\index.js!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\src\\store\\email\\moduleEmailActions.js","dependencies":[{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\src\\store\\email\\moduleEmailActions.js","mtime":1570206916000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\JS\\vuexy-vuejs-admin\\full-version\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*=========================================================================================\n  File Name: moduleEmailActions.js\n  Description: Email Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport axios from \"@/axios.js\";\nexport default {\n  setEmailSearchQuery: function setEmailSearchQuery(_ref, query) {\n    var commit = _ref.commit;\n    commit(\"SET_EMAIL_SEARCH_QUERY\", query);\n  },\n  // Fetch emails\n  fetchEmails: function fetchEmails(_ref2, payload) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/email/mails\", {\n        params: {\n          filter: payload.filter\n        }\n      }).then(function (response) {\n        commit(\"SET_MAILS\", response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Fetch Tags\n  fetchTags: function fetchTags(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/email/tags\").then(function (response) {\n        commit(\"SET_TAGS\", response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Fetch Email Meta\n  fetchMeta: function fetchMeta(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/email/meta\").then(function (response) {\n        commit(\"SET_META\", response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Move mails to another folder\n  moveMailsTo: function moveMailsTo(_ref5, payload) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/email/move-mails\", {\n        emailIds: payload.emailIds,\n        mailFolder: payload.to\n      }).then(function (response) {\n        commit(\"MOVE_MAILS_TO\", payload);\n        commit(\"UPDATE_UNREAD_META_ON_MOVE\", payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Update Mails label\n  updateLabels: function updateLabels(_ref6, payload) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/email/update-labels\", {\n        emailIds: payload.mails,\n        label: payload.label\n      }).then(function (response) {\n        commit(\"UPDATE_LABELS\", payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  setLabels: function setLabels(_ref7, payload) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/email/set-labels\", {\n        mailId: payload.mailId,\n        labels: payload.labels\n      }).then(function (response) {\n        commit(\"SET_LABELS\", payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Set mails flag unread to true\n  setUnread: function setUnread(_ref8, payload) {\n    var commit = _ref8.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/email/mark-unread\", {\n        emailIds: payload.emailIds,\n        unreadFlag: payload.unreadFlag\n      }).then(function (response) {\n        commit(\"SET_UNREAD\", payload); // Remove this if you are getting meta like us\n        // Use your own method to update email meta if you are fetching email meta\n\n        commit(\"UPDATE_UNREAD_META\", payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Toggle isStarred flag in mail\n  toggleIsMailStarred: function toggleIsMailStarred(_ref9, payload) {\n    var commit = _ref9.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/email/set-starred\", {\n        mailId: payload.mailId,\n        value: payload.value\n      }).then(function (response) {\n        commit(\"TOGGLE_IS_MAIL_STARRED\", payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};",{"version":3,"sources":["E:/Programming/JS/vuexy-vuejs-admin/full-version/src/store/email/moduleEmailActions.js"],"names":["axios","setEmailSearchQuery","query","commit","fetchEmails","payload","Promise","resolve","reject","get","params","filter","then","response","data","catch","error","fetchTags","fetchMeta","moveMailsTo","post","emailIds","mailFolder","to","updateLabels","mails","label","setLabels","mailId","labels","setUnread","unreadFlag","toggleIsMailStarred","value"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: moduleEmailActions.js\n  Description: Email Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\nimport axios from \"@/axios.js\"\n\nexport default {\n    setEmailSearchQuery({ commit }, query){\n        commit(\"SET_EMAIL_SEARCH_QUERY\", query)\n    },\n\n    // Fetch emails\n    fetchEmails({ commit }, payload) {\n      return new Promise((resolve, reject) => {\n        axios.get(\"/api/apps/email/mails\", { params: {filter: payload.filter} })\n          .then((response) => {\n            commit(\"SET_MAILS\", response.data)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    // Fetch Tags\n    fetchTags({ commit }) {\n      return new Promise((resolve, reject) => {\n        axios.get(\"/api/apps/email/tags\")\n          .then((response) => {\n            commit(\"SET_TAGS\", response.data)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    // Fetch Email Meta\n    fetchMeta({ commit }) {\n      return new Promise((resolve, reject) => {\n        axios.get(\"/api/apps/email/meta\")\n          .then((response) => {\n            commit(\"SET_META\", response.data)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    // Move mails to another folder\n    moveMailsTo({ commit }, payload) {\n      return new Promise((resolve, reject) => {\n        axios.post(\"/api/apps/email/move-mails\", { emailIds: payload.emailIds, mailFolder: payload.to })\n          .then((response) => {\n            commit(\"MOVE_MAILS_TO\", payload)\n            commit(\"UPDATE_UNREAD_META_ON_MOVE\", payload)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    // Update Mails label\n    updateLabels({ commit }, payload) {\n      return new Promise((resolve, reject) => {\n        axios.post(\"/api/apps/email/update-labels\", { emailIds: payload.mails, label: payload.label })\n          .then((response) => {\n            commit(\"UPDATE_LABELS\", payload)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    setLabels({ commit }, payload) {\n      return new Promise((resolve, reject) => {\n        axios.post(\"/api/apps/email/set-labels\", { mailId: payload.mailId, labels: payload.labels })\n          .then((response) => {\n            commit(\"SET_LABELS\", payload)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    // Set mails flag unread to true\n    setUnread({ commit }, payload) {\n      return new Promise((resolve, reject) => {\n        axios.post(\"/api/apps/email/mark-unread\", { emailIds: payload.emailIds, unreadFlag: payload.unreadFlag })\n          .then((response) => {\n            commit(\"SET_UNREAD\", payload)\n\n            // Remove this if you are getting meta like us\n            // Use your own method to update email meta if you are fetching email meta\n            commit(\"UPDATE_UNREAD_META\", payload)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n\n    // Toggle isStarred flag in mail\n    toggleIsMailStarred({ commit }, payload) {\n      return new Promise((resolve, reject) => {\n        axios.post(\"/api/apps/email/set-starred\", { mailId: payload.mailId, value: payload.value })\n          .then((response) => {\n            commit(\"TOGGLE_IS_MAIL_STARRED\", payload)\n            resolve(response)\n          })\n          .catch((error) => { reject(error) })\n      })\n    },\n}\n"]}]}
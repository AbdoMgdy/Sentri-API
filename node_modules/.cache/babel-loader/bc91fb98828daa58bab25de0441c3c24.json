{"remainingRequest":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js!E:\\Programming\\Bot Dev\\front_end\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Programming\\Bot Dev\\front_end\\src\\store\\email\\moduleEmailMutations.js","dependencies":[{"path":"E:\\Programming\\Bot Dev\\front_end\\src\\store\\email\\moduleEmailMutations.js","mtime":1570208224000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Programming\\Bot Dev\\front_end\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\n\n/*=========================================================================================\n  File Name: moduleEmailMutations.js\n  Description: Email Module Mutations\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nexport default {\n  SET_EMAIL_SEARCH_QUERY: function SET_EMAIL_SEARCH_QUERY(state, query) {\n    state.mailSearchQuery = query;\n  },\n  SET_MAILS: function SET_MAILS(state, mails) {\n    state.mails = mails;\n  },\n  SET_TAGS: function SET_TAGS(state, tags) {\n    state.mailTags = tags;\n  },\n  SET_META: function SET_META(state, meta) {\n    state.meta = meta;\n  },\n  UPDATE_MAIL_FILTER: function UPDATE_MAIL_FILTER(state, filterName) {\n    state.mail_filter = filterName;\n  },\n  UPDATE_LABELS: function UPDATE_LABELS(state, payload) {\n    payload.mails.forEach(function (mailId) {\n      var mailIndex = state.mails.findIndex(function (mail) {\n        return mail.id == mailId;\n      });\n      var index = state.mails[mailIndex].labels.indexOf(payload.label);\n      if (index == -1) state.mails[mailIndex].labels.push(payload.label);else state.mails[mailIndex].labels.splice(index, 1);\n    });\n  },\n  SET_LABELS: function SET_LABELS(state, payload) {\n    state.mails.find(function (mail) {\n      return mail.id === payload.mailId;\n    }).labels = payload.labels;\n  },\n  SET_UNREAD: function SET_UNREAD(state, payload) {\n    payload.emailIds.forEach(function (mailId) {\n      var mailIndex = state.mails.findIndex(function (mail) {\n        return mail.id == mailId;\n      });\n      if (mailIndex !== -1) state.mails[mailIndex].unread = payload.unreadFlag;\n    });\n  },\n  MOVE_MAILS_TO: function MOVE_MAILS_TO(state, payload) {\n    payload.emailIds.forEach(function (mailId) {\n      var mailIndex = state.mails.findIndex(function (mail) {\n        return mail.id == mailId;\n      }); // Update draft meta\n      // If moving from draft mailFolder decrease draft meta by removing mailId\n\n      state.mails[mailIndex].mailFolder === \"draft\" ? state.meta.draftMails.splice(state.meta.draftMails.findIndex(function (i) {\n        return i === mailId;\n      }), 1) : null; // Else increase by pushing mailId\n\n      payload.to === \"draft\" ? state.meta.draftMails.push(mailId) : null;\n      state.mails[mailIndex].mailFolder = payload.to;\n    });\n  },\n  TOGGLE_IS_MAIL_STARRED: function TOGGLE_IS_MAIL_STARRED(state, payload) {\n    state.mails.find(function (mail) {\n      return mail.id === payload.mailId;\n    }).isStarred = payload.value;\n  },\n  // If your process of fetching is different than ours. Please update action and mutation\n  // Maybe this mutation is redundant for you. Feel free to remove it.\n  UPDATE_UNREAD_META: function UPDATE_UNREAD_META(state, payload) {\n    var _loop = function _loop(folder) {\n      // If folder is same as current filter\n      if (folder == state.mail_filter) {\n        // If unread flag is true - increase count\n        if (payload.unreadFlag) {\n          payload.emailIds.forEach(function (mailId) {\n            if (state.meta.unreadMails.folder[folder].indexOf(mailId) === -1) state.meta.unreadMails.folder[folder].push(mailId);\n          });\n        } // else reduce unread mails count\n        else {\n            payload.emailIds.forEach(function (mailId) {\n              var mailIdIndex = state.meta.unreadMails.folder[folder].indexOf(mailId);\n              if (mailIdIndex !== -1) state.meta.unreadMails.folder[folder].splice(mailIdIndex, 1);\n            });\n          }\n      }\n    };\n\n    // Loop over email meta\n    for (var folder in state.meta.unreadMails.folder) {\n      _loop(folder);\n    }\n  },\n  UPDATE_UNREAD_META_ON_MOVE: function UPDATE_UNREAD_META_ON_MOVE(state, payload) {\n    // Updating Draft meta is handled by \"MOVE_MAILS_TO\" mutation\n    payload.emailIds.forEach(function (mailId) {\n      var mail = state.mails.find(function (mail) {\n        return mail.id == mailId;\n      });\n\n      if (mail.unread) {\n        var cf_unread_mails = state.meta.unreadMails.folder[state.mail_filter];\n\n        if (cf_unread_mails) {\n          cf_unread_mails.splice(cf_unread_mails.indexOf(mailId), 1);\n        }\n\n        if (state.meta.unreadMails.folder[payload.to]) state.meta.unreadMails.folder[payload.to].push(mailId);\n      }\n    });\n  }\n};",{"version":3,"sources":["E:/Programming/Bot Dev/front_end/src/store/email/moduleEmailMutations.js"],"names":["SET_EMAIL_SEARCH_QUERY","state","query","mailSearchQuery","SET_MAILS","mails","SET_TAGS","tags","mailTags","SET_META","meta","UPDATE_MAIL_FILTER","filterName","mail_filter","UPDATE_LABELS","payload","forEach","mailId","mailIndex","findIndex","mail","id","index","labels","indexOf","label","push","splice","SET_LABELS","find","SET_UNREAD","emailIds","unread","unreadFlag","MOVE_MAILS_TO","mailFolder","draftMails","i","to","TOGGLE_IS_MAIL_STARRED","isStarred","value","UPDATE_UNREAD_META","folder","unreadMails","mailIdIndex","UPDATE_UNREAD_META_ON_MOVE","cf_unread_mails"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: moduleEmailMutations.js\n  Description: Email Module Mutations\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\n\nexport default {\n    SET_EMAIL_SEARCH_QUERY(state, query) {\n        state.mailSearchQuery = query\n    },\n    SET_MAILS(state, mails) {\n      state.mails = mails\n    },\n    SET_TAGS(state, tags) {\n      state.mailTags = tags\n    },\n    SET_META(state, meta) {\n      state.meta = meta\n    },\n    UPDATE_MAIL_FILTER(state, filterName) {\n      state.mail_filter = filterName\n    },\n    UPDATE_LABELS(state, payload) {\n        payload.mails.forEach((mailId) => {\n            const mailIndex = state.mails.findIndex((mail) => mail.id == mailId)\n            const index = state.mails[mailIndex].labels.indexOf(payload.label)\n\n            if(index == -1) state.mails[mailIndex].labels.push(payload.label)\n            else state.mails[mailIndex].labels.splice(index, 1)\n        })\n    },\n    SET_LABELS(state, payload) {\n      state.mails.find((mail) => mail.id === payload.mailId).labels = payload.labels\n    },\n    SET_UNREAD(state, payload) {\n        payload.emailIds.forEach((mailId) => {\n          const mailIndex = state.mails.findIndex((mail) => mail.id == mailId)\n          if(mailIndex !== -1) state.mails[mailIndex].unread = payload.unreadFlag\n        })\n    },\n\n    MOVE_MAILS_TO(state, payload) {\n      payload.emailIds.forEach((mailId) => {\n        const mailIndex = state.mails.findIndex((mail) => mail.id == mailId)\n\n        // Update draft meta\n        // If moving from draft mailFolder decrease draft meta by removing mailId\n        state.mails[mailIndex].mailFolder === \"draft\" ? state.meta.draftMails.splice(state.meta.draftMails.findIndex(i => i === mailId), 1) : null\n        // Else increase by pushing mailId\n        payload.to === \"draft\" ? state.meta.draftMails.push(mailId) : null\n\n        state.mails[mailIndex].mailFolder = payload.to\n      })\n    },\n\n    TOGGLE_IS_MAIL_STARRED(state, payload) {\n      state.mails.find((mail) => mail.id === payload.mailId).isStarred = payload.value\n    },\n\n    // If your process of fetching is different than ours. Please update action and mutation\n    // Maybe this mutation is redundant for you. Feel free to remove it.\n    UPDATE_UNREAD_META(state, payload) {\n\n      // Loop over email meta\n      for(const folder in state.meta.unreadMails.folder) {\n\n        // If folder is same as current filter\n        if(folder == state.mail_filter) {\n\n          // If unread flag is true - increase count\n          if(payload.unreadFlag) {\n            payload.emailIds.forEach((mailId) => {\n              if(state.meta.unreadMails.folder[folder].indexOf(mailId) === -1) state.meta.unreadMails.folder[folder].push(mailId)\n            })\n          }\n\n          // else reduce unread mails count\n          else {\n            payload.emailIds.forEach((mailId) => {\n              let mailIdIndex = state.meta.unreadMails.folder[folder].indexOf(mailId)\n              if(mailIdIndex !== -1) state.meta.unreadMails.folder[folder].splice(mailIdIndex, 1)\n            })\n          }\n        }\n      }\n    },\n    UPDATE_UNREAD_META_ON_MOVE(state, payload) {\n\n      // Updating Draft meta is handled by \"MOVE_MAILS_TO\" mutation\n\n      payload.emailIds.forEach((mailId) => {\n        let mail = state.mails.find((mail) => mail.id == mailId)\n\n        if(mail.unread) {\n          const cf_unread_mails = state.meta.unreadMails.folder[state.mail_filter]\n          if(cf_unread_mails) {\n            cf_unread_mails.splice( cf_unread_mails.indexOf(mailId), 1)\n          }\n          if(state.meta.unreadMails.folder[payload.to]) state.meta.unreadMails.folder[payload.to].push(mailId)\n        }\n      })\n    }\n}\n"]}]}